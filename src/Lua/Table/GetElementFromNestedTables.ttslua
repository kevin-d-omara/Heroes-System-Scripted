#include ../String/SplitString

--[[
## Summary
Return an element nested inside a set of tables by the absolute path to the element by name (i.e. "Animals.Dogs.Fido")

## Parameters
<string> stringPath: A delimited string that specifies a list of tables leading to the element to be returned. The first element must be a globally accessible variable.
<string> delimiter: The delimiter used to separate tables.
    [Optional, defaults to '.']

## Throws
Error if the first element is either nil or local.
--]]
function GetElementFromNestedTables(stringPath, delimiter)
    assert(type(stringPath) == 'string', "Argument [1] 'stringPath': string expected but got " .. type(stringPath) .. ".")
    local delimiter = delimiter or '.'
    local pathArray = SplitString(stringPath, delimiter)

    -- Get the table matching the first element.
    local root = _ENV[pathArray[1]]
    if root == nil then
        error("Variable '" .. tostring(pathArray[1]) .. "' cannot be accessed because it is either nil or local. Make sure it is not declared with local and that you have spelled it correctly.")
    end

    -- Get the final element from the nested tables.
    for i = 2, #pathArray do
        root = root[pathArray[i]]
        assert(root ~= nil, "Error while getting nested table. Key '" .. tostring(pathArray[i]) .. "' not found in '" .. stringPath .. "'")
    end

    return root
end
