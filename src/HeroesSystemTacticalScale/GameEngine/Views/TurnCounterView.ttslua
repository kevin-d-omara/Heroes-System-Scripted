#include <!/../lib/30log/class>
#include <!/HeroesSystemTacticalScale/GameEngine/Placement>
#include <!/TabletopSimulator/Vector2>

--[[
## Class
public class TurnCounterView
{
    -- Public Fields
    TurnCounterConfig Config
    TurnCounterCooordinates Coordinates
    Object Object

    -- Constructors
    public TurnCounterView(config)

    -- Methods
    void Materialize(parameters)
    void PlaceEventMarker(tile, index)
    void PlaceInitiativeMarker(tile, index)
    void PlaceWeatherMarker(tile)
}

## Summary
Physical representation of the TurnCounter. Offers methods for placing event and initiative markers and setting the weather.
--]]

TurnCounterView = class('TurnCounterView')

--[[
## Parameters
<TurnCounterConfig> config: The config data for this turn tracker.
<TurnCounterCooordinates> coordinates: The offsets for this turn counter's initiative track and event market track.
--]]
function TurnCounterView:init(config, coordinates)
    self.Config = config
    self.Coordinates = coordinates

    return self
end

--[[
## Parameters
<Vector2> position: The position on the table to place the TurnCounter.
<func> callback: A function to invoke when the TurnCounter is finshed being physically materialized.
    [Optional, defaults to nil.]
--]]
function TurnCounterView:Materialize(position, callback)
    position = Vector3(position)
    Placement.PlaceTileOntoTable(self.Config.TurnCounterTile, position, |obj| self:_PlaceMarkers(obj, callback))
end

-- Physically place all of the tiles onto the table.
function TurnCounterView:_PlaceMarkers(object, callback)
    -- Capture a reference to the physically isntantiated turn counter.
    self.Object = object

    -- Both of the following use pairs instead of ipairs because the indices may not be consecutive. In this case, ipairs() stops too early.
    for k,v in pairs(self.Config.InitiativeMarkers) do
        self:PlaceInitiativeMarker(v, k)
    end
    for k,v in pairs(self.Config.EventMarkers) do
        self:PlaceEventMarker(v, k)
    end
    for _,v in pairs(self.Config.ExtraObjects) do
        -- "v" is a "TurnCounterExtraObject" defined in "GameEngine.Config.TurnCounterConfig"
        -- TODO: make actual class
        self:PlaceExtraObject(v.tile, v.index, v.offset)
    end
    if self.Config.WeatherTile ~= nil then
        self:PlaceWeatherMarker(self.Config.WeatherTile)
    end

    if callback ~= nil then callback() end
end

function TurnCounterView:PlaceInitiativeMarker(tile, index)
    local localCoord = self.Coordinates:GetOffsetForInitiativeMarker(index)
    self:_PlaceMarker(tile, localCoord)
end

function TurnCounterView:PlaceEventMarker(tile, index)
    local localCoord = self.Coordinates:GetOffsetForEventMarker(index)
    self:_PlaceMarker(tile, localCoord)
end

function TurnCounterView:PlaceExtraObject(tile, index, offset)
    local localCoord = self.Coordinates:GetOffsetForInitiativeMarker(index, offset)
    self:_PlaceMarker(tile, localCoord)
end

function TurnCounterView:PlaceWeatherMarker(tile)
    local localCoord = self.Coordinates.WeatherTileOrigin
    self:_PlaceMarker(tile, localCoord)
end

function TurnCounterView:_PlaceMarker(tile, localCoord)
    local worldCoord = self.Object.getPosition() + Vector3({
        x = localCoord.x,
        y = 0,
        z = localCoord.y,
    })
    Placement.PlaceTileOntoTable(tile, worldCoord)
end
