#include <!/../lib/30log/class>
#include <IForceModel>
#include <Impl/CombatGroupForceModel>
#include <Impl/RecruitmentTileForceModel>

--[[
## Class
static class ForceModelFactory
{
    -- Public Static Methods
    IForceModel Create(table data)
}

## Summary
A factory class for creating IForceModel instances.
Is used to transform scenario configuration data into IForceModel instances.
--]]

ForceModelFactory = class('ForceModelFactory')

--[[
## Summary
Transforms the data into an IForceModel instance.

## Parameters
See constructors for the IForceModel concrete classes this factory supports:
    `CombatGroupForceModel`
    `RecruitmentTileForceModel`

## Return
An object of type IForceModel, from the following list:
    RecruitmentTileForceModel
    CombatGroupForceModel

## Throws
Error if input is nil.
--]]
function ForceModelFactory.Create(data)
    assert(data and (type(data) == 'string' or type(data) == 'table'), "Argument [1] 'data': string or table expected, but got " .. type(data) .. ".")

    if
        data.tile        ~= nil
        or data.options  ~= nil
        or data.disclude ~= nil
        or data.include  ~= nil
        or data.modify   ~= nil
        or (data.extra   ~= nil and data.tiles == nil)  -- CombatGroupForceModel only has 'extra' when it also has 'tiles'.
    then
        return RecruitmentTileForceModel(data)
    else
        return CombatGroupForceModel(data)
    end
end
