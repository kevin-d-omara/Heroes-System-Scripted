#include <!/../lib/30log/class>
#include <BattlefieldModel>
#include <TurnCounterModel>

--[[
## Class
public class ScenarioModel
{
    -- Public Fields
    BattlefieldModel Battlefield
    TurnCounterModel TurnCounter
    dictionary<PlayerModel> Players
    TeamsModel Teams

    -- Constructors
    public ScenarioModel(data)
}

## Summary
Container for all physical components of a Scenario.
--]]

ScenarioModel = class('ScenarioModel')

--[[
## Parameters
<table> data: A table with the following key-value pairs:
    <table> Battlefield: See constructor for BattlefieldModel.
    <table> TurnCounter: See constructor for TurnCounterModel.
    <table<table>> Players: See constructor for PlayerModel.
    <table> Teams: See constructor for TeamsModel.
--]]
function ScenarioModel:init(data)
    if type(data) ~= 'table' then error("Argument [1] data: table expected, but got " .. type(data) .. ".") end
    if type(data.Battlefield) ~= 'table' then
        error("Argument [1] parameters.Battlefield: table expected, but got " .. type(data.Battlefield) .. ".")
    end
    if type(data.TurnCounter) ~= 'table' then
        error("Argument [2] parameters.TurnCounter: table expected, but got " .. type(data.TurnCounter) .. ".")
    end
    if type(data.Players) ~= 'table' then
        error("Argument [3] parameters.Players: table expected, but got " .. type(data.Players) .. ".")
    end

    self.Battlefield = BattlefieldModel(data.Battlefield)
    self.TurnCounter = TurnCounterModel(data.TurnCounter)
    self.Players = {}
    for k,v in pairs(data.Players) do
        self.Players[k] = PlayerModel(v)
    end

    return self
end
