--[[
## Class
public class Tile
{
    -- Public Fields
    string Path             -- The path to this resource (i.e. "HoN.Core_Box.Terrain.Thicket_1")
    bool Flip = false       -- True if the object should be flipped over when placed.
    bool Lock = false       -- True if the object should be locked/frozen when placed.
    float Rotation = 0      -- Number of degrees about the y-axis the object should be rotated when placed.

    -- Constructors
    public Tile(string path)
    public Tile(table data)
}

## Summary
Wrapper for a path that adds placement information such as rotation and whether or not the tile should be flipped over.
--]]

local Tile = {}

-- Can create a new Tile instance by calling either Tile:new() or just Tile().
setmetatable(Tile, { __call = function(self, ...) return self:new(...) end })

--[[
## Signatures
Tile(string path)
Tile(table data)
    data:
        <string> 1|path     -- The key can be either [1] or ['path'].
        <bool> flip
        <bool> lock
        <float> rotation
--]]
function Tile:new(data)
    local obj = {}
    setmetatable(obj, self)
    self.__index = self
    self.__call = function(self, ...) return self:new(...) end

    if type(data) == 'string' then
        obj.Path = data
        obj.Flip = false
        obj.Lock = false
        obj.Rotation = 0
    elseif type(data) == 'table' then
        obj.Path        = data.path or data[1]
        obj.Flip        = data.flip or false
        obj.Lock        = data.lock or false
        obj.Rotation    = data.rotation or 0
    else
        error("Argument [1] data: string or table expected, but got " .. tostring(type(data)) .. ".")
    end

    if obj.Path == nil then
        error("Argument [1] data: string or table with key ['path'] or [1] expected, but got " .. tostring(data) .. ".")
    end

    return obj
end

function Tile.ToString(tile)
    return "Tile({path=" .. tostring(tile.Path) .. ", flip=" .. tostring(tile.Flip) .. ", lock=" .. tostring(tile.Lock) .. ", rotation=" .. tostring(tile.Rotation) .. "})"
end

-- Metamethod operators
Tile.__tostring  = Tile.ToString
