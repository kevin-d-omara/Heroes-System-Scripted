--[[
Learnings:
    * How do we make sure objects are placed on top of each other?
        - Naive implementation: store list of all objects. Do AABB bounding box to get a list of objects. Then z-order them and place above with an offset.
        - Optimized: use a quadtree to find collisions.
    * How do we handle randomized Bonus Tactics (etc.)?
        - Include "RandomCollections" as a defineable class in the 'object.ttslua' config file. Add a special HeroesSystemTacticalScale "get resource by string" wrapper that does the lookup and substitution.
    * How about objects that need to be placed off-center.
        - Include an option: "offset", which allows the user to adjust the final placement by any amount.
        - User just puts in a floating point value instead of integer.
--]]
{
    Name = "Out_of_Gas",
    Model = {
        Battlefield = {
            Width = 3,
            Height = 2,
            Terrain = {
                {"HoN.CoreBox.Terrain.C6_A"},
                {"HoN.CoreBox.Terrain.C4_B"},
                {"HoN.CoreBox.Terrain.C5_A"},
                {"HoN.CoreBox.Terrain.C1_B", {rotation = 90}},
                {"HoN.CoreBox.Terrain.C2_B", {rotation = 90}},
                {"HoN.CoreBox.Terrain.C3_A"},
            },
            Elements = {
                -- element                                      , tile, space-type   , index, options{}
                {"HoN.CoreBox.Tokens.Bonus_Tactic_Random"       , {1,1}, "interspace", {7,3}},                      -- Showcase random selection.
                {"HoN.CoreBox.Tokens.Bonus_Tactic_Random"       , {1,3}, "interspace", {5,6}},
                {"HoN.CoreBox.Tokens.Bonus_Tactic_Random"       , {1,3}, "interspace", {8,3}},
                {"HoN.CoreBox.Terrain.Thicket_Random"           , {1,2}, "space"     , {5,7}},
                {"HoN.CoreBox.Terrain.House_2x1"                , {1,2}, "line-x"    , {5,1}, {rotation = 90}},     -- Showcase line-based coordinates.
                {"HoN.CoreBox.Terrain.House_1x1"                , {1,3}, "interspace", {3,3}, {rotation = 180}},    -- Showcase rotation.
                {"HoN.CoreBox.Tokens.Objective_Gas"             , {1,3}, "interspace", {3,3}, {rotation = 180}},
                {"HoN.CoreBox.US.Rifle_Platoon_12th.Halftrack_1", {1,1}, "line-x"    , {8,5}},
                {"HoN.CoreBox.US.Rifle_Platoon_12th.Halftrack_2", {1,1}, "line-x"    , {8,6}, {isFlipped = true}},  -- Showcase flipping of object.
            },
        },
    },
}
