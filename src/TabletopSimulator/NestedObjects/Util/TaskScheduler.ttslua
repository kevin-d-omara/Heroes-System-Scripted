#include <DoubleEndedQueue>

--[[
A simple way of making sure only one task runs per frame.

This is useful for when you are doing work in a loop, but each step needs to wait at least 1 frame before executing.
--]]
TaskScheduler = {}

TaskScheduler.taskQueue = DoubleEndedQueue()
TaskScheduler.runningTaskId = nil

function TaskScheduler.AddTask(callback, parameters)
    TaskScheduler.taskQueue:Enqueue({callback = callback, parameters = parameters})
    TaskScheduler.RunNextTaskIfAble()
end

-- Run a single task if there are none running. Then wait for 1 frame.
function TaskScheduler.RunNextTaskIfAble()
    if TaskScheduler.runningTaskId == nil and TaskScheduler.taskQueue:Count() > 0 then

        function ResumeWork()
            TaskScheduler.runningTaskId = nil
            TaskScheduler.RunNextTaskIfAble()
        end

        -- Block future tasks from running for 1 frame.
        TaskScheduler.runningTaskId = Wait.frames(ResumeWork, 1)

        local task = TaskScheduler.taskQueue:Dequeue()
        task.callback(task.parameters)
    end
end
